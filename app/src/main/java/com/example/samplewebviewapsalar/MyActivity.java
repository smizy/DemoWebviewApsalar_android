package com.example.samplewebviewapsalar;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.webkit.JsResult;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;

import com.apsalar.sdk.Apsalar;
import com.apsalar.sdk.ApsalarJSInterface;

import org.json.*;

import java.net.URLDecoder;
import java.util.HashMap;
import java.util.Map;


public class MyActivity extends Activity {

    private WebView mWebView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my);

        Apsalar.startSession(this, "<API_KEY>", "<SECRET>");

        Log.d("Apsalar SDK", "sdkVersion = " + com.apsalar.sdk.Constants.SDK_VER);

        mWebView = (WebView) findViewById(R.id.activity_main_webview);

        WebSettings webSettings = mWebView.getSettings();
        webSettings.setJavaScriptEnabled(true);

        mWebView.setWebChromeClient( new WebChromeClient() {

        });

        ApsalarJSInterface ApsalarJSInterfaceInstance = new ApsalarJSInterface(this);
        //R.id.webview below is an int generated by the android system, can be found in the R file.
        ApsalarJSInterfaceInstance.setWebViewId(R.id.activity_main_webview);

        mWebView.setWebViewClient( new WebViewClient() {

        } );

        mWebView.addJavascriptInterface(ApsalarJSInterfaceInstance, "ApsalarInterface");
        mWebView.loadUrl("file:///android_asset/www2/index.html");

    }

    /**
     * URL におけるパラメータ部分を解析してディクショナリ化します。
     *
     * @param url URL。
     *
     * @return 解析結果。
     */
    public Map< String, String > parseUrlParameters( String url ) {
        Map< String, String > result = new HashMap< String, String >();
        int                   index = url.indexOf( "?" );
        if( index == -1 ) {
            return result;
        }

        String[] params = url.substring( index + 1 ).split( "&" );
        for( String param : params ) {
            String[] keyValuePair = param.split( "=" );
            if( keyValuePair.length >= 2 ) {
                try {
                    String value = URLDecoder.decode(keyValuePair[1], "utf-8");
                    result.put( keyValuePair[ 0 ], value );

                } catch( java.io.UnsupportedEncodingException e ) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.my, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        // Check if the key event was the Back button and if there's history
        if ((keyCode == KeyEvent.KEYCODE_BACK) && mWebView.canGoBack()) {
            mWebView.goBack();

            Apsalar.event("バックボタン押下");
            return true;
        }
        if ((keyCode == KeyEvent.KEYCODE_FORWARD) && mWebView.canGoForward()) {
            mWebView.goForward();
            Apsalar.event("進むボタン押下");
            return true;
        }
        // If it wasn't the Back key or there's no web page history, bubble up to the default
        // system behavior (probably exit the activity)
        return super.onKeyDown(keyCode, event);
    }

    @Override
    protected void onPause() {
        super.onPause();
        Apsalar.unregisterApsalarReceiver();
    }

}
